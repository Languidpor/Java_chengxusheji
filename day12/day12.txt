1、对象的相关操作
1.1、对象的创建：使用new关键字， new 类型();这个过程叫做对象初始化。
1.2、对象的属性、方法掉用：使用 .  
1.3、初始化
     对象的属性在初始化之前，是有默认值的，byte、short、int、long、char类型
的属性的默认值是0，float、double的默认值是0.0，boolean的默认值是false。
其他所有的类型的属性默认值是null。
1.4、引用类型
	是一种特殊的类型(8种基本类型以外的类型)，可以是数组、接口、其他的类。
都称为引用类型。
    此类型的变量可以指向该类型的一个对象，该变量存储了对象的地址信息。
    
Manager zhangsan  = new Manager();  创建了一个对象，此对象在内存中，将这个对象的地址信息
存储在“zhangsan”这个引用类型的变量中，可以理解为“zhangsan”这个引用类型的变量指向了创建出来的
这个对象。于是就可以通过这个引用变量来操作这个创建出来的对象了。

引用类型的变量，也可以简称为引用。

相同类型的引用可以相互赋值，赋值的过程中不会创建新的对象，只是相互赋值其内存储的对象地址。
两个引用是可以指向同一个对象的。

引用类型的变量可以赋值为null，表示没有指向任何对象，这个时候无法去操作该类型的属性和行为，
因为是不符合逻辑。

Manager lisi = null;//声明 一个引用类型的变量
lisi.deletePost(...)//错误的，nullPointException空指针异常。

1.5、null   nullPointException
null:这个引用没有指向任何对象
nullPointException:访问一个没有指向任何对象的变量的属性、行为，就会报这个异常

1.6、构造方法(构造函数、构造器、析构函数)
在创建对象的时候会被自动调用的一个方法，一般用作对象的属性的初始化，不同于其他方法
该方法没有返回值，也不用写void，访问控制修饰符不做要求，方法名必须和类名一致。
构造方法可以有多个，只要参数列表不同就像，表示以不同的逻辑创建对象。

1.7、this关键字
表示当前正在创建的这个对象

一个类，当程序员没有写构造时，编译器默认的提供一个空的构造。
但是当程序员给了一个有参构造时，编译器默认提供的那个空构造就不提供了。
java为什么这个设计???。











