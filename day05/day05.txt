精度丢失？
 十进制   二进制
 1       0001   
 2       0010
 3       0011
 4       0100
 5       0101
 6       0110
 7       0111
 8       1000
 9       1001
 10      1010
 11      1011
 12      1100
 13      1101 
 计算机核心是晶体管 ，通电表示1，否则表示0
 
 十进制的13变成二进制    拿到所有的余数(从下往上拿)1101
 13/2=6余1
 6/2 =3余0
 3/2 =1余1
 1/2 =0余1
 0
 
 十进制的13.125变成二进制
 整数部分是1101，现在需要计算小数部分，拿到所有的整数部分(从上往下)001
 所以13.125变成二进制就是1101.001
 0.125*2 = 0.25 取整数部分 0
 0.25*2  = 0.5  取整数部分 0
 0.5*2   = 1    取整数部分 1
 
 任务：计算十进制0.9的二进制 0.111001100....
 
 0.9 * 2 = 1.8  取整数部分1
 0.8 * 2 = 1.6  取整数部分1
 0.6 * 2 = 1.2  取整数部分1
 0.2 * 2 = 0.4  取整数部分0
 0.4 * 2 = 0.8  取整数部分0
 0.8 * 2 = 1.6  取整数部分1
 0.6 * 2 = 1.2  取整数部分1
 0.2 * 2 = 0.4  取整数部分0
 0.4 * 2 = 0.8  取整数部分0
 ... ... 
 
 运算符
3.3、逻辑运算符
建立在关系运算符基础之上，主要有三种
与&&  或||  非!，两个参与逻辑运算的变量类型都是boolean，逻辑运算的返回值
也是一个boolean

与：两个变量都为true的时候，结果为true，否则为false
或：两个变量有一个是true，结果就是true，否则为false
非：取相反

短路逻辑：在与运算和或运算的时候都有可能发生，
与：参与运算的两个boolean中的第一个变量为false，就决定了最终结果为false，
第二个变量就不进行计算了，因为第二个变量的结果是什么都对最终结果没有影响。

或：参与运算的两个boolean中的第一个变量为true，就决定了最终结果为true，
第二个变量就不进行计算了，因为第二个变量的结果是什么都对最终结果没有影响。

练习任务：
1、用户输入一个年份，程序判断是不是闰年，一个年份如果满足以下条件之一，就是闰年
条件1：可以被400整除
条件2：可以被4整除，同时不能被100整除






3.4、赋值运算符
3.5、字符串链接运算符
3.6、三目运算符
 
 
 
 
 

